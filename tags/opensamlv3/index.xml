<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>OpenSAMLV3 on SAMLSecurity</title>
    <link>https://blog.samlsecurity.com/tags/opensamlv3/</link>
    <description>Recent content in OpenSAMLV3 on SAMLSecurity</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Stefan Rasmusson</copyright>
    <lastBuildDate>Sat, 20 May 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.samlsecurity.com/tags/opensamlv3/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Decrypting a SAML Assertion in OpenSAML v3</title>
      <link>https://blog.samlsecurity.com/2017/05/decrypting-saml-assertion-in-opensaml-v3.html</link>
      <pubDate>Sat, 20 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blog.samlsecurity.com/2017/05/decrypting-saml-assertion-in-opensaml-v3.html</guid>
      <description>
        
          
            Explanation and examples of how to decrypt an encrypted SAML assertion with OpenSAML V3
          
          
        
      </description>
    </item>
    
    <item>
      <title>Signing and Sending AuthnRequests in OpenSAML V3</title>
      <link>https://blog.samlsecurity.com/2016/08/signing-and-sending-authnrequests-in.html</link>
      <pubDate>Wed, 10 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://blog.samlsecurity.com/2016/08/signing-and-sending-authnrequests-in.html</guid>
      <description>
        
          
            Information and example on how to sign and send authnrequests in OpenSAML
          
          
        
      </description>
    </item>
    
    <item>
      <title>Verifying signatures with OpenSAML V3</title>
      <link>https://blog.samlsecurity.com/2016/08/verifying-signatures-with-opensaml-v3.html</link>
      <pubDate>Wed, 10 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://blog.samlsecurity.com/2016/08/verifying-signatures-with-opensaml-v3.html</guid>
      <description>
        
          
            Here is the happy news of the day. Verifying a signature in OpenSAML V3 is done almost identical to how it is done in V2, is still very much relevant and worth checking out.
The only difference between the two version is that the SignatureValidator is no longer instantiated. Instead the validate method of SignatureValidator is now static and takes both the credentials and the signature object.
Below is the code for verifying signatures in OpenSAML V3
          
          
        
      </description>
    </item>
    
    <item>
      <title>New book release: OpenSAML version 3</title>
      <link>https://blog.samlsecurity.com/2016/06/new-book-release-opensaml-version-3.html</link>
      <pubDate>Thu, 23 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://blog.samlsecurity.com/2016/06/new-book-release-opensaml-version-3.html</guid>
      <description>
        
          
            As many of you know, version 2 of OpenSAML will officially reach its end of life at July 31 of 2016. This means that the library will not be receiving any new updates, not even critical security updates.
Because of this, everyone currently using version 2 of OpenSAML is strongly advised to migrate to OpenSAML version 3.
In light of this, I have done a fair amount of research on version 3 and am now releasing a new edition of A Guide to OpenSAML.
          
          
        
      </description>
    </item>
    
    <item>
      <title>OpenSAML V3 Javadocs</title>
      <link>https://blog.samlsecurity.com/2016/04/opensaml-v3-javadocs.html</link>
      <pubDate>Mon, 25 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://blog.samlsecurity.com/2016/04/opensaml-v3-javadocs.html</guid>
      <description>
        
          
            One notable thing that changed going from version 2 to 3 of OpenSAML is that the library was split in to. This first post on OpenSAML V3 try to help by linking to the javadoc of all different libraries
          
          
        
      </description>
    </item>
    
    <item>
      <title>Nullpointer exception in OpenSAML</title>
      <link>https://blog.samlsecurity.com/2014/05/nullpointer-exception-in-opensaml.html</link>
      <pubDate>Mon, 05 May 2014 00:00:00 +0000</pubDate>
      
      <guid>https://blog.samlsecurity.com/2014/05/nullpointer-exception-in-opensaml.html</guid>
      <description>
        
          
            This is a common exception to beginners in using OpenSAML. A common mistake when starting to use the OpenSAML library is to not initialize the library.
          
          
        
      </description>
    </item>
    
    <item>
      <title>Generating metadata with OpenSAML</title>
      <link>https://blog.samlsecurity.com/2012/02/generating-metadata-with-opensaml.html</link>
      <pubDate>Wed, 22 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>https://blog.samlsecurity.com/2012/02/generating-metadata-with-opensaml.html</guid>
      <description>
        
          
            OpenSAML can be used to generate metadata. As with reading metadata, the library is pretty straight forward in relation to the metadata XML.
This is an example for generating a SP metadata file
We start by creating the EntityDescriptor, setting the EntityId and building the SSO descriptor.
1EntityDescriptor spEntityDescriptor = SAMLUtil.buildSAMLObjectWithDefaultName(EntityDescriptor.class); 2spEntityDescriptor.setEntityID(entityID); 3SPSSODescriptor spSSODescriptor = SAMLUtil.buildSAMLObjectWithDefaultName(SPSSODescriptor.class); In the SSO descriptor we request how we want the communication signed and encrypted
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
