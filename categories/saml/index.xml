<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SAML on SAMLSecurity</title>
    <link>https://blog.samlsecurity.com/categories/saml/</link>
    <description>Recent content in SAML on SAMLSecurity</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Stefan Rasmusson</copyright>
    <lastBuildDate>Tue, 08 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.samlsecurity.com/categories/saml/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Authenticating a React SPA towards a SAML IdP</title>
      <link>https://blog.samlsecurity.com/post/saml-for-react-spa/</link>
      <pubDate>Tue, 08 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blog.samlsecurity.com/post/saml-for-react-spa/</guid>
      <description>
        
          &lt;p&gt;In this tutorial we will look at how to authenticate user from a typical SPA in React using a SAML IdP, in this case ADFS. This is done using a Keycloak server to act as a broker and translate between OIDC and SAML. I will show the necessary configuration needed and as a cherry on top show you how to automate the whole setup.&lt;/p&gt;
&lt;h2 id=&#34;the-problem-with-saml-in-spa-in-browser-application&#34;&gt;The problem with SAML in SPA in browser application&lt;/h2&gt;
&lt;p&gt;“No, you can’t use SAML in a Single Page Application.”&lt;/p&gt;
&lt;p&gt;“SAML is old. Why don’t you just change to OIDC.”&lt;/p&gt;
&lt;p&gt;I have seen many questions on the subject and this is most often the kind of answers you find if you start looking around on how to let you users login to SAML IdP from SPAs like React or Angular.&lt;/p&gt;
&lt;p&gt;It is true that you can&#39;t use SAML directly from the SPA running in the browser. This is because SAML relies heavily on public/private key pairs of the parties involved to do message signing and encryption and a SPA in the browser can not give the protection needed for these.&lt;/p&gt;
&lt;p&gt;SAML also involves other mechanisms like automatically posting forms that does not translate well to a in browser application.&lt;/p&gt;
&lt;p&gt;In conclusion, SAML was not designed to be used for things like SPAs. It was designed for a classic, old school, thick backend server - client setup.
OIDC on the other hand is a more modern protocol that fit this use case perfectly.&lt;/p&gt;
&lt;p&gt;However, the reality is that many organizations have relied on SAML for along time and it is not unusual to see this being the only supported protocol for the existing identity provider.&lt;/p&gt;
&lt;h2 id=&#34;brokered-authentication-using-keycloak&#34;&gt;Brokered authentication using Keycloak&lt;/h2&gt;
&lt;p&gt;One way to solve this dilemma is to use a broker authentication pattern.&lt;/p&gt;
&lt;p&gt;Instead of just using OIDC or just using SAML, the SPA uses OIDC, the IdP uses SAML and we place Keycloak as a broker between to translate.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;oidc-SAML-translation-for-SPA.png&#34; alt=&#34;Brokered authentication pattern&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The SPA in the browser redirects the user with an OIDC request to Keycloak&lt;/li&gt;
&lt;li&gt;Keycloak receives the user and request, crafts a SAML request and send it and the user to ADFS IdP for authentication&lt;/li&gt;
&lt;li&gt;Ones the user is authenticated ADFS send a SAML response and user back to Keycloak.&lt;/li&gt;
&lt;li&gt;Keycloak receives the SAML response, interprets it and uses it to craft a OIDC response and respond to the original OIDC request from the React SPA.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;setting-it-up&#34;&gt;Setting it up&lt;/h2&gt;
&lt;p&gt;When I prepared this, I created configuration and scripts in Vagrant to set up the a demo environment automatically. The automated setup is available &lt;a href=&#34;https://github.com/rasmusson/SPA-saml-poc/&#34;&gt;here on Github&lt;/a&gt;. At the end of the article I have some more information on how to use it.&lt;/p&gt;
&lt;p&gt;While walking through the configuration I will show how to configure everything in the UI interfaces as well as using the command line.&lt;/p&gt;
&lt;p&gt;Below we will look on the four steps needed&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Setting up Keycloak to use OIDC towards React SPA&lt;/li&gt;
&lt;li&gt;Setting up the React demo application&lt;/li&gt;
&lt;li&gt;SAML integration between ADFS and Keycloak&lt;/li&gt;
&lt;li&gt;Configure brokering between OIDC and SAML&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;book-ad&#34; id=&#34;SAML20Ad&#34;&gt;
&lt;h2 class=&#34;upper_ad_line&#34;&gt;&lt;span&gt;Ad&lt;/span&gt;&lt;/h2&gt;


&lt;a href=&#34;https://shop.samlsecurity.com/b/fGWSH&#34; id=&#34;SAML20Ad-link&#34;&gt;&lt;div class=&#34;book-ad-grid&#34;&gt;

  &lt;div class=&#34;text&#34;&gt; &lt;p&gt;Need a complete understanding of SAML 2.0?&lt;/p&gt;
&lt;p&gt;Have a look on the book &lt;em&gt;SAML 2.0: Designing secure identity federation&lt;/em&gt;!&lt;/p&gt;
&lt;/div&gt;
  
  
  &lt;div class=&#34;cover&#34;&gt;&lt;img alt=&#34;Book cover for SAML 2.0: Designing secure identity federation&#34; src=&#34;https://blog.samlsecurity.com/ads/saml20/saml20_cover_hu21b4ac923320e0693211419acfc85557_238774_400x300_fit_box_2.png&#34; &gt;&lt;/div&gt;
	
&lt;/div&gt;
&lt;/a&gt;
&lt;span class=&#34;lower_ad_line&#34;&gt;&lt;/span&gt;
&lt;/div&gt;
&lt;h3 id=&#34;setting-up-keycloak-to-use-oidc-towards-react-spa&#34;&gt;Setting up Keycloak to use OIDC towards React SPA&lt;/h3&gt;
&lt;p&gt;Provided you have set up your Keycloak, lets dive in and configure OIDC!&lt;/p&gt;
&lt;p&gt;Browse to &lt;a href=&#34;https://keycloak:8443/auth/admin/&#34;&gt;https://keycloak:8443/auth/admin/&lt;/a&gt; and login as admin.&lt;/p&gt;
&lt;p&gt;Create a realm for the OIDC integration&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;create-OIDC-realm-in-keycloak.png&#34; alt=&#34;Create OIDC realm&#34;&gt;&lt;/p&gt;
&lt;p&gt;Create a client for the React SPA. On the first screen, just input a name for the client and click create.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;create-OIDC-client-in-keycloak.png&#34; alt=&#34;Create OIDC client&#34;&gt;&lt;/p&gt;
&lt;p&gt;On this next screen add a redirect URL for your SPA. In my case Im setting up a demo React app below with redirect URL &amp;quot;http://react:3000&amp;quot;&lt;/p&gt;
&lt;p&gt;Under Web Origins, type a plus sign. &lt;strong&gt;Do not click the plus sign, but type a plus sign in the field&lt;/strong&gt;. This will add all your redirect URLs in allowed origins and avoid CORS problems.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;config-oidc-client-in-keycloak-1.png&#34; alt=&#34;Configure OIDC client&#34;&gt;&lt;/p&gt;
&lt;p&gt;Now lets configure the client to use PKCE. This is best practice when working with SPAs and other applications that can not protect a secret key.&lt;/p&gt;
&lt;p&gt;Make sure &amp;quot;Access Type&amp;quot; is set to public and that &amp;quot;Standard Flow Enabled&amp;quot; is set to On.&lt;/p&gt;
&lt;p&gt;Next expand the Advanced settings and set &amp;quot;Proof Key for Code Exchange Code Challenge Method&amp;quot; to S256&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;config-oidc-client-in-keycloak-2.png&#34; alt=&#34;Configure OIDC client&#34;&gt;&lt;/p&gt;
&lt;p&gt;To do this using the Keycloak CLI
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;kcadm.sh create realms -s &lt;span class=&#34;nv&#34;&gt;realm&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;oidcrealm -s &lt;span class=&#34;nv&#34;&gt;enabled&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;kcadm.sh create clients -r oidcrealm -f - &lt;span class=&#34;s&#34;&gt;&amp;lt;&amp;lt; EOF
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;{&amp;#34;clientId&amp;#34; : &amp;#34;oidc-client&amp;#34;, &amp;#34;redirectUris&amp;#34;: [&amp;#34;http://react:3000&amp;#34;], &amp;#34;webOrigins&amp;#34;: [&amp;#34;+&amp;#34;], &amp;#34;standardFlowEnabled&amp;#34;: true, &amp;#34;publicClient&amp;#34;: true, &amp;#34;attributes&amp;#34;: {&amp;#34;pkce.code.challenge.method&amp;#34;:&amp;#34;S256&amp;#34;}}
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;EOF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;h3 id=&#34;setting-up-the-react-demo-application&#34;&gt;Setting up the React demo application&lt;/h3&gt;
&lt;p&gt;Now its time to configure the React application to authenticate users using OIDC. In this tutorial I&#39;m using my own OIDC demo app.
The application is available &lt;a href=&#34;https://github.com/rasmusson/react-oidc-pkce-demo&#34;&gt;here on Github&lt;/a&gt;
How to set up another app will vary depending on what framework you are using, but you will need to get and configure the OIDC endpoint for Keycloak. For our current setup the endpoint will be these&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;authorizeEndpoint: https://keycloak:8443/auth/realms/oidcrealm/protocol/openid-connect/auth&lt;/li&gt;
&lt;li&gt;tokenEndpoint: https://keycloak:8443/auth/realms/oidcrealm/protocol/openid-connect/token&lt;/li&gt;
&lt;li&gt;logoutEndpoint: https://keycloak:8443/auth/realms/oidcrealm/protocol/openid-connect/logout&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To configure the React demo app, clone the repo and run npm install.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;git clone https://github.com/rasmusson/react-oidc-pkce-demo
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; react-oidc-pkce-demo
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;npm install&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now open src/SecuredApp.js and edit the configuration in AuthService to match your endpoints, client name and redirect URI. In our case it will look like this.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;authService&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AuthService&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;clientId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;oidc-client&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;authorizeEndpoint&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;https://keycloak:8443/auth/realms/oidcrealm/protocol/openid-connect/auth&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;tokenEndpoint&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;https://keycloak:8443/auth/realms/oidcrealm/protocol/openid-connect/token&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;logoutEndpoint&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;https://keycloak:8443/auth/realms/oidcrealm/protocol/openid-connect/logout&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;6&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;redirectUri&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;http://react:3000&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;7&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;scopes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;openid&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next start the React app&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;npm start&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To test that the OIDC integration works fine, lets create a test user in Keycloak and authenticate.&lt;/p&gt;
&lt;p&gt;![Add test user](add-user-to test-OIDC-authentication.png)
Save and then, set a password for the user as below&lt;/p&gt;
&lt;p&gt;![Changing password of the test user](change-password-of-user-to test-OIDC-authentication.png)
I disable temporary password as this is for demo purposes.&lt;/p&gt;
&lt;p&gt;To create the test user using Keycloak CLI
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;kcadm.sh create users -r oidcrealm -s &lt;span class=&#34;nv&#34;&gt;username&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;test&lt;/span&gt; -s &lt;span class=&#34;nv&#34;&gt;enabled&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt; -o --fields id,username
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;kcadm.sh set-password -r oidcrealm --username &lt;span class=&#34;nb&#34;&gt;test&lt;/span&gt; --new-password test&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;Browse to where your React app is running, in my case &lt;a href=&#34;http://react:3000/&#34;&gt;http://react:3000/&lt;/a&gt; and click the Login button&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;react-oidc-sample-app-login-form.png&#34; alt=&#34;React app&#34;&gt;
Login using the new test user&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;login-test-user-in-react-oidc-sample-app.png&#34; alt=&#34;Login as test user&#34;&gt;
You should get a JWT token with user information as a result.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;react-oidc-sample-app-jwt-token.png&#34; alt=&#34;JWT token&#34;&gt;

&lt;div class=&#34;book-ad&#34; id=&#34;SAML20Ad&#34;&gt;
&lt;h2 class=&#34;upper_ad_line&#34;&gt;&lt;span&gt;Ad&lt;/span&gt;&lt;/h2&gt;


&lt;a href=&#34;https://shop.samlsecurity.com/b/fGWSH&#34; id=&#34;SAML20Ad-link&#34;&gt;&lt;div class=&#34;book-ad-grid&#34;&gt;

  &lt;div class=&#34;text&#34;&gt; &lt;p&gt;Need a complete understanding of SAML 2.0?&lt;/p&gt;
&lt;p&gt;Have a look on the book &lt;em&gt;SAML 2.0: Designing secure identity federation&lt;/em&gt;!&lt;/p&gt;
&lt;/div&gt;
  
  
  &lt;div class=&#34;cover&#34;&gt;&lt;img alt=&#34;Book cover for SAML 2.0: Designing secure identity federation&#34; src=&#34;https://blog.samlsecurity.com/ads/saml20/saml20_cover_hu21b4ac923320e0693211419acfc85557_238774_400x300_fit_box_2.png&#34; &gt;&lt;/div&gt;
	
&lt;/div&gt;
&lt;/a&gt;
&lt;span class=&#34;lower_ad_line&#34;&gt;&lt;/span&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;h3 id=&#34;saml-integration-between-adfs-and-keycloak&#34;&gt;SAML integration between ADFS and Keycloak&lt;/h3&gt;
&lt;p&gt;Next step is to set up a authentication provider in Keycloak to authenticate users against the ADFS IdP.&lt;/p&gt;
&lt;p&gt;In Keycloak, create a new SAML authentication provider&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;create-saml-authentication-provider-in-keycloak.png&#34; alt=&#34;Create SAML authentication provider&#34;&gt;
&lt;img src=&#34;configure-saml-authentication-provider-in-keycloak.png&#34; alt=&#34;Configure SAML authentication provider&#34;&gt;&lt;/p&gt;
&lt;p&gt;Configuration may differ in different environments. In this demo we will set the following&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Sync Mode: Import - Meaning we import the user data comming from the IdP ones, when the user is first authenticated.&lt;/li&gt;
&lt;li&gt;Single Sign-On Service URL: &lt;a href=&#34;https://adfs.devel/adfs/ls/&#34;&gt;https://adfs.devel/adfs/ls/&lt;/a&gt; - Where our ADFS endpoint for SSO is.&lt;/li&gt;
&lt;li&gt;Single Logout Service URL: &lt;a href=&#34;https://adfs.devel/adfs/ls/&#34;&gt;https://adfs.devel/adfs/ls/&lt;/a&gt; - Where our ADFS endpoint for SLO is.&lt;/li&gt;
&lt;li&gt;Want AuthnRequests Signed: On - To sign authentication request and especially singing single logout requests which is mandatory by default in ADFS.&lt;/li&gt;
&lt;li&gt;NameID Policy Format: Email - This is how we will identify users&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To configure the SAML IdP using Keycloak CLI
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;kcadm.sh create identity-provider/instances -r oidcrealm -s &lt;span class=&#34;nv&#34;&gt;alias&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;saml -s &lt;span class=&#34;nv&#34;&gt;providerId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;saml -s &lt;span class=&#34;nv&#34;&gt;enabled&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt; -s config.wantAuthnRequestsSigned&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt; -s config.allowedClockSkew&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt; -s &lt;span class=&#34;s1&#34;&gt;&amp;#39;config.useJwksUrl=&amp;#34;true&amp;#34;&amp;#39;&lt;/span&gt; -s config.singleSignOnServiceUrl&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;https://adfs.devel/adfs/ls/ -s config.singleLogoutServiceUrl&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;https://adfs.devel/adfs/ls/ -s config.nameIDPolicyFormat&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress -s config.signatureAlgorithm&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;RSA_SHA256&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;h4 id=&#34;configure-keycloak-as-relaying-party-in-adfs&#34;&gt;Configure Keycloak as relaying party in ADFS&lt;/h4&gt;
&lt;p&gt;When setting up Keycloak as a SP in ADFS, we need to import Metadata. The metadata contains connection and communication information that ADFS needs.&lt;/p&gt;
&lt;p&gt;First lets download the metadata from Keycloak. At the ADFS server, browse to https://keycloak:8443/auth/realms/oidcrealm/broker/saml/endpoint/descriptor. Click through the HTTPS warnings and download the file.&lt;/p&gt;
&lt;p&gt;Open up ADFS administration, and add a relying party.
Choose Claims aware.
Use the option &amp;quot;Import data about the relying party from a file&amp;quot; and browse to you file.&lt;/p&gt;
&lt;p&gt;Normally the metadata is simplest imported by using the option &amp;quot;Import data about the relying party published online or on a local network&amp;quot; to let ADFS fetch the metadata directly from Keycloak. This requires the TLS trust is setup correctly. I have not bothered to do that for this demo so I use this method instead.&lt;/p&gt;
&lt;p&gt;Set a name, for example Keycloak&lt;/p&gt;
&lt;p&gt;Next we set which users are allowed to authenticate thought the integration. As this is a demo, we make it simple and set it to everyone. Select &amp;quot;Permit everyone&amp;quot;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;select-ADFS-Access-Control-Policy-permitting-SAML-users.png&#34; alt=&#34;Select users to permit&#34;&gt;&lt;/p&gt;
&lt;p&gt;Then click next, next and finish&lt;/p&gt;
&lt;p&gt;After you finish, the dialog &amp;quot;Edit Claims Issuance Policy for Keycloak&amp;quot; should open. Here we configure what information will be sent to Keycloak together with the user when it has been authenticated. In Keycloak we configured the user to be identified by email, so now we must configure ADFS to send the email address of the authenticated user.&lt;/p&gt;
&lt;p&gt;First we create a rule to get a the email as a claim.&lt;/p&gt;
&lt;p&gt;Select &amp;quot;Send LDAP Attributes as Claims&amp;quot;. Set a name for the issuance rule, select Active Directory as store. Under LDAP attribute choose &amp;quot;Email addresses&amp;quot; and set &amp;quot;Email address&amp;quot; as Outgoing claim type&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;configure-adfs-to-issue-email-attribute-as-claim-for-SAML.png&#34; alt=&#34;Add LDAP attribute as claim to include in SAML Assertion&#34;&gt;&lt;/p&gt;
&lt;p&gt;Next, we create a rule to transform and set the email claim as NameID in the SAML response.
Select &amp;quot;Transform an incoming claim&amp;quot;&lt;/p&gt;
&lt;p&gt;As &amp;quot;Incoming Claim type&amp;quot; set email address and as &amp;quot;Outgoing Claim type&amp;quot; set Name ID and Email as &amp;quot;Outgoing name ID format&amp;quot;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;transform-adfs-claim-to-nameid-for-SAML-assertion.png&#34; alt=&#34;Transform claim to Name ID&#34;&gt;&lt;/p&gt;
&lt;p&gt;To configure the Keycloak relying party on ADFS using PowerShell, first disable HTTPS verification if you have not yet set up TLS trust between Keycloak and ADFS
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-PowerShell&#34; data-lang=&#34;PowerShell&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;[System.Net.ServicePointManager]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ServerCertificateValidationCallback&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;Create and configure relying party
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;Add-ADFSRelyingPartyTrust&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Name&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;keycloak&amp;#39;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-MetadataURL&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;https://keycloak:8443/auth/realms/oidcrealm/broker/saml/endpoint/descriptor&amp;#39;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-IssuanceAuthorizationRules&lt;/span&gt; &lt;span class=&#34;sh&#34;&gt;@&amp;#39;
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;&lt;span class=&#34;sh&#34;&gt;@RuleTemplate = &amp;#34;AllowAllAuthzRule&amp;#34;
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;&lt;span class=&#34;sh&#34;&gt; =&amp;gt; issue(Type = &amp;#34;http://schemas.microsoft.com/authorization/claims/permit&amp;#34;, Value = &amp;#34;true&amp;#34;);
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;&lt;span class=&#34;sh&#34;&gt;&amp;#39;@&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-IssuanceTransformRules&lt;/span&gt; &lt;span class=&#34;sh&#34;&gt;@&amp;#39;
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;&lt;span class=&#34;sh&#34;&gt;@RuleTemplate = &amp;#34;LdapClaims&amp;#34;
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;&lt;span class=&#34;sh&#34;&gt;@RuleName = &amp;#34;Email Attribute&amp;#34;
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;&lt;span class=&#34;sh&#34;&gt;c:[Type == &amp;#34;http://schemas.microsoft.com/ws/2008/06/identity/claims/windowsaccountname&amp;#34;, Issuer == &amp;#34;AD AUTHORITY&amp;#34;] =&amp;gt; issue(store = &amp;#34;Active Directory&amp;#34;, types = (&amp;#34;http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress&amp;#34;), query = &amp;#34;;mail;{0}&amp;#34;, param = c.Value);
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;&lt;span class=&#34;sh&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;&lt;span class=&#34;sh&#34;&gt;@RuleTemplate = &amp;#34;MapClaims&amp;#34;
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;sh&#34;&gt;@RuleName = &amp;#34;Email ad nameid&amp;#34;
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;sh&#34;&gt;c:[Type == &amp;#34;http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress&amp;#34;] =&amp;gt; issue(Type =&amp;#34;http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier&amp;#34;, Issuer = c.Issuer, OriginalIssuer = c.OriginalIssuer, Value = c.Value, ValueType = c.ValueType, Properties[&amp;#34;http://schemas.xmlsoap.org/ws/2005/05/identity/claimproperties/format&amp;#34;] = &amp;#34;urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress&amp;#34;);
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;sh&#34;&gt;&amp;#39;@&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;And while we are in the Windows server, lets create a test user in AD to test the final setup when we are done.&lt;/p&gt;
&lt;p&gt;Open the Active Directory Users and Computers tool and create a new user.
&lt;em&gt;After creating the user, make sure to open the user properties and add an email address.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;create-ADFS-user-for-SAML-authentication.png&#34; alt=&#34;Add user in AD&#34;&gt;&lt;/p&gt;
&lt;p&gt;To add the user using PowerShell, first disable complex passwords to let use a simple password for testing
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;secedit&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cfg&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;C:&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;secconfig&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cfg&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;gc &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;C:&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;secconfig&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cfg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;PasswordComplexity = 1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;PasswordComplexity = 0&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;MinimumPasswordLength = 7&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;MinimumPasswordLength = 0&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Out-File&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;C:&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;secconfig&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cfg&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;secedit&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;configure&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;db&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;C:&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Windows&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;security&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;local&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sdb&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cfg&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;C:&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;secconfig&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cfg&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;areas&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SECURITYPOLICY&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;  &lt;span class=&#34;nb&#34;&gt;rm &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;-force&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;C:&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;secconfig&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cfg&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-confirm&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$false&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;Now lets create the user
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;Import-Module&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ActiveDirectory&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;New-ADUser&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-SamAccountName&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;test2&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-GivenName&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Test&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Surname&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;User&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Name&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Test User&amp;#34;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Email&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;test@test.com&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;`&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;           &lt;span class=&#34;n&#34;&gt;-Path&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;CN=Users,DC=windomain,DC=local&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;`&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;           &lt;span class=&#34;n&#34;&gt;-AccountPassword&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;ConvertTo-SecureString&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;test&amp;#39;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-AsPlainText&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Force&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Enabled&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;h3 id=&#34;configure-brokering-between-oidc-and-saml&#34;&gt;Configure brokering between OIDC and SAML&lt;/h3&gt;
&lt;p&gt;To make use of the configured SAML IdP to authenticate the user from the React SPA, we need to configure two things in Keycloak.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Identity Provider Redirector - To direct the user to ADFS IdP&lt;/li&gt;
&lt;li&gt;Authentication flow - To handle the SAML result from ADFS&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;configure-the-redirector&#34;&gt;Configure the redirector&lt;/h4&gt;
&lt;p&gt;Configure the redirector under Authentication in the menu in the Keycloak web ui. Set an alias and under Default Identity Provider, set the name chosen when creating the SAML authentication provider in earlier steps.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;create-redirector-config-for-ADFS-SAML-authentication.png&#34; alt=&#34;Create redirector config for ADFS SAML authentication&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;set-default-authentication-provider-to-ADFS-SAML.png&#34; alt=&#34;Set default authentication provider for ADFS&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;transparent-brokering&#34;&gt;Transparent brokering&lt;/h4&gt;
&lt;p&gt;The default behavior of Keycloak in brokering mode is that the a new user is asked to update their user profile in Keycloak a first authentication. If you want to have the brokering in Keycloak to be totally transparent, this can be disabled in the &amp;quot;First broker login&amp;quot; authentication flow.&lt;/p&gt;
&lt;p&gt;Under Authentication, select &amp;quot;First broker login&amp;quot; flow and click disable for the first step named &amp;quot;Review Profile&amp;quot;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;disable-profile-review-in-keycloak.png&#34; alt=&#34;Disable profile review&#34;&gt;&lt;/p&gt;
&lt;p&gt;To configure the IdP redirection and disabling of the profile review in Keycloak CLI
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;idpRedirector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;kcadm.sh get /authentication/flows/browser/executions -r oidcrealm &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; jq -r &lt;span class=&#34;s1&#34;&gt;&amp;#39;.[] | select(.providerId == &amp;#34;identity-provider-redirector&amp;#34;).id&amp;#39;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;kcadm.sh create /authentication/executions/&lt;span class=&#34;nv&#34;&gt;$idpRedirector&lt;/span&gt;/config -r oidcrealm -s config.defaultProvider&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;saml -s &lt;span class=&#34;nv&#34;&gt;alias&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;straight_to_saml
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;reviewProfileExecution&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;kcadm.sh get /authentication/flows/first%20broker%20login/executions -r oidcrealm &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; jq -r &lt;span class=&#34;s1&#34;&gt;&amp;#39;.[] | (select(.alias == &amp;#34;review profile config&amp;#34;) | .requirement) |= &amp;#34;DISABLED&amp;#34; | select(.alias == &amp;#34;review profile config&amp;#34;)&amp;#39;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;kcadm.sh update authentication/flows/first%20broker%20login/executions -r oidcrealm -f - &lt;span class=&#34;s&#34;&gt;&amp;lt;&amp;lt; EOF
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;$reviewProfileExecution
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;EOF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;book-ad&#34; id=&#34;SAML20Ad&#34;&gt;
&lt;h2 class=&#34;upper_ad_line&#34;&gt;&lt;span&gt;Ad&lt;/span&gt;&lt;/h2&gt;


&lt;a href=&#34;https://shop.samlsecurity.com/b/fGWSH&#34; id=&#34;SAML20Ad-link&#34;&gt;&lt;div class=&#34;book-ad-grid&#34;&gt;

  &lt;div class=&#34;text&#34;&gt; &lt;p&gt;Need a complete understanding of SAML 2.0?&lt;/p&gt;
&lt;p&gt;Have a look on the book &lt;em&gt;SAML 2.0: Designing secure identity federation&lt;/em&gt;!&lt;/p&gt;
&lt;/div&gt;
  
  
  &lt;div class=&#34;cover&#34;&gt;&lt;img alt=&#34;Book cover for SAML 2.0: Designing secure identity federation&#34; src=&#34;https://blog.samlsecurity.com/ads/saml20/saml20_cover_hu21b4ac923320e0693211419acfc85557_238774_400x300_fit_box_2.png&#34; &gt;&lt;/div&gt;
	
&lt;/div&gt;
&lt;/a&gt;
&lt;span class=&#34;lower_ad_line&#34;&gt;&lt;/span&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;h2 id=&#34;lets-test-it&#34;&gt;Lets test it&lt;/h2&gt;
&lt;p&gt;Browse to the React test applications and click Login&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;react-oidc-sample-app-login-form.png&#34; alt=&#34;React app&#34;&gt;
Login in ADFS as the test user created earlier&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;react-login-OIDC-authentication-using-SAML.png&#34; alt=&#34;React app&#34;&gt;
You now get authenticated to the application and the React test application shows the content of the JWT token in the OIDC authentication response&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;jwt-token-with-atributes-from-ADFS-SAML-IDP.png&#34; alt=&#34;JWT token&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;fully-automated-demo&#34;&gt;Fully automated demo&lt;/h2&gt;
&lt;p&gt;To make it easy to try this out and play around, I have published my fully &lt;a href=&#34;https://github.com/rasmusson/SPA-saml-poc/&#34;&gt;Automated demo of this here Github&lt;/a&gt;. The demo is based on vagrant, spinning up different virtual machines in virtual box for ADFS, Keycloak and the React app.&lt;/p&gt;
&lt;p&gt;To start the demo first install the prerequisites listed in the GitHub page. Then spin everything up
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;vagrant up adfs keycloak react&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;Go grab lunch. It takes some time =)

&lt;div class=&#34;book-ad&#34; id=&#34;SAML20Ad&#34;&gt;
&lt;h2 class=&#34;upper_ad_line&#34;&gt;&lt;span&gt;Ad&lt;/span&gt;&lt;/h2&gt;


&lt;a href=&#34;https://shop.samlsecurity.com/b/fGWSH&#34; id=&#34;SAML20Ad-link&#34;&gt;&lt;div class=&#34;book-ad-grid&#34;&gt;

  &lt;div class=&#34;text&#34;&gt; &lt;p&gt;Need a complete understanding of SAML 2.0?&lt;/p&gt;
&lt;p&gt;Have a look on the book &lt;em&gt;SAML 2.0: Designing secure identity federation&lt;/em&gt;!&lt;/p&gt;
&lt;/div&gt;
  
  
  &lt;div class=&#34;cover&#34;&gt;&lt;img alt=&#34;Book cover for SAML 2.0: Designing secure identity federation&#34; src=&#34;https://blog.samlsecurity.com/ads/saml20/saml20_cover_hu21b4ac923320e0693211419acfc85557_238774_400x300_fit_box_2.png&#34; &gt;&lt;/div&gt;
	
&lt;/div&gt;
&lt;/a&gt;
&lt;span class=&#34;lower_ad_line&#34;&gt;&lt;/span&gt;
&lt;/div&gt;&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>SAML Chrome Extension Published!</title>
      <link>https://blog.samlsecurity.com/2015/10/saml-chrome-extension-published.html</link>
      <pubDate>Wed, 28 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.samlsecurity.com/2015/10/saml-chrome-extension-published.html</guid>
      <description>
        
          &lt;p&gt;I have been working with SAML for a while now and I have always used Firefox for debugging instead of my favorite browser, Chrome. Why? you ask. Because there is a plugin called SAML tracer on firefox that is excellent for viewing the SAML messages going across the browser. There have been no such plugin for Chrome.&lt;/p&gt;
&lt;p&gt;Finally I have decided to take things into my own hands and build one.&lt;/p&gt;
&lt;p&gt;And now it&#39;s done and here it is!
&lt;a href=&#34;https://chrome.google.com/webstore/detail/saml-devtools-extension/jndllhgbinhiiddokbeoeepbppdnhhio&#34;&gt;SAML DevTools extension&lt;/a&gt;
ss
&lt;img src=&#34;devtools-shot.jpg&#34; alt=&#34;SAML Chrome DevTools extension screenshot&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;feature-summary&#34;&gt;Feature summary&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The extension adds a panel to the Developer Tools&lt;/li&gt;
&lt;li&gt;Shows all network requests for the current window&lt;/li&gt;
&lt;li&gt;SAML requests are highlighted in green for usability&lt;/li&gt;
&lt;li&gt;Can filter out SAML requests&lt;/li&gt;
&lt;li&gt;Show request and response details&lt;/li&gt;
&lt;li&gt;Displays syntax highlighted SAML message&lt;/li&gt;
&lt;li&gt;Custom syntax highlighting for SAML to allow for easier reading&lt;/li&gt;
&lt;/ul&gt;

        
      </description>
    </item>
    
    <item>
      <title>What is a SAML Assertion?</title>
      <link>https://blog.samlsecurity.com/2015/07/what-is-saml-assertion.html</link>
      <pubDate>Thu, 02 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.samlsecurity.com/2015/07/what-is-saml-assertion.html</guid>
      <description>
        
          &lt;p&gt;If you are just starting out trying to understand SAML you will come across the term SAML Assertion quite quickly. In this post or tutorial, I will try to explain to you what a SAML Assertion is and give you some examples on how they could look. This post mainly looks at the SAML Assertion in the perspective of the SAML Web Browser Profile. If you don&#39;t know what that is, have a look on &lt;a href=&#34;https://blog.samlsecurity.com/2012/05/saml-web-profile.html&#34;&gt;my post about exactly that&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;what-is-a-saml-assertion&#34;&gt;What is a SAML Assertion?&lt;/h2&gt;
&lt;p&gt;The SAML Assertion is the main piece in the SAML puzzle. This is the object that the rest of SAML is build to safely build, transport and use.&lt;/p&gt;
&lt;p&gt;A SAML Assertion is basically a package with security information about a entity.(e.g. A user) issued from the Identity Provider(IdP) to the Service Provider(SP). When the user has authenticated with the IdP a SAML Assertion is sent to the SP with the IdPs information about that user.&lt;/p&gt;

&lt;div class=&#34;book-ad&#34; id=&#34;SAML20Ad&#34;&gt;
&lt;h2 class=&#34;upper_ad_line&#34;&gt;&lt;span&gt;Ad&lt;/span&gt;&lt;/h2&gt;


&lt;a href=&#34;https://shop.samlsecurity.com/b/fGWSH&#34; id=&#34;SAML20Ad-link&#34;&gt;&lt;div class=&#34;book-ad-grid&#34;&gt;

  &lt;div class=&#34;text&#34;&gt; &lt;p&gt;Need a complete understanding of SAML 2.0?&lt;/p&gt;
&lt;p&gt;Have a look on the book &lt;em&gt;SAML 2.0: Designing secure identity federation&lt;/em&gt;!&lt;/p&gt;
&lt;/div&gt;
  
  
  &lt;div class=&#34;cover&#34;&gt;&lt;img alt=&#34;Book cover for SAML 2.0: Designing secure identity federation&#34; src=&#34;https://blog.samlsecurity.com/ads/saml20/saml20_cover_hu21b4ac923320e0693211419acfc85557_238774_400x300_fit_box_2.png&#34; &gt;&lt;/div&gt;
	
&lt;/div&gt;
&lt;/a&gt;
&lt;span class=&#34;lower_ad_line&#34;&gt;&lt;/span&gt;
&lt;/div&gt;
&lt;h2 id=&#34;what-does-a-saml-assertion-contain&#34;&gt;What does a SAML Assertion contain?&lt;/h2&gt;
&lt;p&gt;The SAML Assertion contains some general information like, who sent it, what time it was sent and validity period of the assertion. The assertion also contains statements about a user. These come in three different types.&lt;/p&gt;
&lt;h3 id=&#34;authentication&#34;&gt;Authentication&lt;/h3&gt;
&lt;p&gt;The authentication statement contains, not surprisingly, information about the authentication of the user. Mainly when and by what means the user was authenticated.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;saml:authnstatement&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;      &lt;span class=&#34;na&#34;&gt;authninstant=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;2010-11-04T14:04:30Z&amp;#34;&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;      &lt;span class=&#34;na&#34;&gt;sessionindex=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;s22428b07e56ce0dbd3f72237ce29c585541db5d01&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;   &lt;span class=&#34;nt&#34;&gt;&amp;lt;saml:authncontext&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;saml:authncontextclassref&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;6&lt;/span&gt;         urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport
&lt;span class=&#34;ln&#34;&gt;7&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;/saml:authncontextclassref&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;8&lt;/span&gt;   &lt;span class=&#34;nt&#34;&gt;&amp;lt;/saml:authncontext&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/saml:authnstatement&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;attribute&#34;&gt;Attribute&lt;/h3&gt;
&lt;p&gt;The attribute statement can contain application specific attributes connected to the user, for example. Address, telephone number social security number.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;saml:attributestatement&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;   &lt;span class=&#34;nt&#34;&gt;&amp;lt;saml:attribute&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;social&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;saml:attributevalue&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;            &lt;span class=&#34;na&#34;&gt;xmlns:xs=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://www.w3.org/2001/XMLSchema&amp;#34;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;            &lt;span class=&#34;na&#34;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;            &lt;span class=&#34;na&#34;&gt;xsi:type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;xs:string&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;         555501234
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;/saml:attributevalue&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;   &lt;span class=&#34;nt&#34;&gt;&amp;lt;/saml:attribute&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;   &lt;span class=&#34;nt&#34;&gt;&amp;lt;saml:attribute&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;email&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;saml:attributevalue&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;            &lt;span class=&#34;na&#34;&gt;xmlns:xs=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://www.w3.org/2001/XMLSchema&amp;#34;&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;            &lt;span class=&#34;na&#34;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;14&lt;/span&gt;            &lt;span class=&#34;na&#34;&gt;xsi:type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;xs:string&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;15&lt;/span&gt;         someone@example.com
&lt;span class=&#34;ln&#34;&gt;16&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;/saml:attributevalue&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;17&lt;/span&gt;   &lt;span class=&#34;nt&#34;&gt;&amp;lt;/saml:attribute&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;18&lt;/span&gt;   &lt;span class=&#34;nt&#34;&gt;&amp;lt;saml:attribute&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;telephone&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;19&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;saml:attributevalue&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;20&lt;/span&gt;            &lt;span class=&#34;na&#34;&gt;xmlns:xs=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://www.w3.org/2001/XMLSchema&amp;#34;&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;21&lt;/span&gt;            &lt;span class=&#34;na&#34;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;22&lt;/span&gt;            &lt;span class=&#34;na&#34;&gt;xsi:type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;xs:string&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;23&lt;/span&gt;         546848134886
&lt;span class=&#34;ln&#34;&gt;24&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;/saml:attributevalue&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;25&lt;/span&gt;   &lt;span class=&#34;nt&#34;&gt;&amp;lt;/saml:attribute&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;26&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/saml:attributestatement&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;authorization&#34;&gt;Authorization&lt;/h3&gt;
&lt;p&gt;The authorization statement contains information about the users access rights to different resources. This statement can be used for basic authorization. For more advanced authorization cases I recommend taking a look at &lt;a href=&#34;http://docs.oasis-open.org/xacml/3.0/xacml-3.0-core-spec-os-en.html&#34;&gt;the XACML standard&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;saml:authorizationdecisionstatement&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;      &lt;span class=&#34;na&#34;&gt;decision=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Permit&amp;#34;&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;      &lt;span class=&#34;na&#34;&gt;resource=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://www.example.org/customers/getCustomers&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;   &lt;span class=&#34;nt&#34;&gt;&amp;lt;saml:action&amp;gt;&lt;/span&gt;Read&lt;span class=&#34;nt&#34;&gt;&amp;lt;/saml:action&amp;gt;&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/saml:authorizationdecisionstatement&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;what-does-a-saml-assertion-look-like&#34;&gt;What does a SAML Assertion look like?&lt;/h2&gt;
&lt;p&gt;Here is an example on what a whole can look like.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;saml:assertion&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;      &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;s2365479533bf942f8eaaa2c267f9bd4ff679ebc1f&amp;#34;&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;      &lt;span class=&#34;na&#34;&gt;issueinstant=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;2011-01-24T08:47:50Z&amp;#34;&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;      &lt;span class=&#34;na&#34;&gt;version=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;2.0&amp;#34;&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;      &lt;span class=&#34;na&#34;&gt;xmlns:saml=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;urn:oasis:names:tc:SAML:2.0:assertion&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;   &lt;span class=&#34;nt&#34;&gt;&amp;lt;saml:issuer&amp;gt;&lt;/span&gt;IDP-alias&lt;span class=&#34;nt&#34;&gt;&amp;lt;/saml:issuer&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;   &lt;span class=&#34;nt&#34;&gt;&amp;lt;saml:subject&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;saml:nameid&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;            &lt;span class=&#34;na&#34;&gt;format=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;urn:oasis:names:tc:SAML:2.0:nameid-format:transient&amp;#34;&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;            &lt;span class=&#34;na&#34;&gt;namequalifier=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;IDP-alias&amp;#34;&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;            &lt;span class=&#34;na&#34;&gt;spnamequalifier=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;my-alias&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;         5VkzP/MZ1PMJ62o45/7DdFms9y7K
&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;/saml:nameid&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;14&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;saml:subjectconfirmation&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;method=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;urn:oasis:names:tc:SAML:2.0:cm:bearer&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;15&lt;/span&gt;         &lt;span class=&#34;nt&#34;&gt;&amp;lt;saml:subjectconfirmationdata&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;16&lt;/span&gt;               &lt;span class=&#34;na&#34;&gt;inresponseto=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;_bba7e8a2f7a7c51e339d614b2c2d1178&amp;#34;&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;17&lt;/span&gt;               &lt;span class=&#34;na&#34;&gt;notonorafter=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;2011-01-24T08:57:50Z&amp;#34;&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;18&lt;/span&gt;               &lt;span class=&#34;na&#34;&gt;recipient=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;https://myIDP.test.com/saml/consumer&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;19&lt;/span&gt;         &lt;span class=&#34;nt&#34;&gt;&amp;lt;/saml:subjectconfirmationdata&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;20&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;/saml:subjectconfirmation&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;21&lt;/span&gt;   &lt;span class=&#34;nt&#34;&gt;&amp;lt;/saml:subject&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;22&lt;/span&gt;   &lt;span class=&#34;nt&#34;&gt;&amp;lt;saml:conditions&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;notbefore=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;2011-01-24T08:37:50Z&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;notonorafter=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;2011-01-24T08:57:50Z&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;23&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;saml:audiencerestriction&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;24&lt;/span&gt;         &lt;span class=&#34;nt&#34;&gt;&amp;lt;saml:audience&amp;gt;&lt;/span&gt;my-alias&lt;span class=&#34;nt&#34;&gt;&amp;lt;/saml:audience&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;25&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;/saml:audiencerestriction&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;26&lt;/span&gt;   &lt;span class=&#34;nt&#34;&gt;&amp;lt;/saml:conditions&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;27&lt;/span&gt;   &lt;span class=&#34;nt&#34;&gt;&amp;lt;saml:authnstatement&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;28&lt;/span&gt;         &lt;span class=&#34;na&#34;&gt;authninstant=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;2011-01-24T08:47:50Z&amp;#34;&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;29&lt;/span&gt;         &lt;span class=&#34;na&#34;&gt;sessionindex=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;s212cd7811734a92405b6ef8308a1b1a98e32e6f01&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;30&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;saml:authncontext&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;31&lt;/span&gt;         &lt;span class=&#34;nt&#34;&gt;&amp;lt;saml:authncontextclassref&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;32&lt;/span&gt;            urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport
&lt;span class=&#34;ln&#34;&gt;33&lt;/span&gt;         &lt;span class=&#34;nt&#34;&gt;&amp;lt;/saml:authncontextclassref&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;34&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;/saml:authncontext&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;35&lt;/span&gt;   &lt;span class=&#34;nt&#34;&gt;&amp;lt;/saml:authnstatement&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;36&lt;/span&gt;   &lt;span class=&#34;nt&#34;&gt;&amp;lt;saml:attributestatement&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;37&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;saml:attribute&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;social&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;38&lt;/span&gt;         &lt;span class=&#34;nt&#34;&gt;&amp;lt;saml:attributevalue&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;39&lt;/span&gt;               &lt;span class=&#34;na&#34;&gt;xmlns:xs=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://www.w3.org/2001/XMLSchema&amp;#34;&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;40&lt;/span&gt;               &lt;span class=&#34;na&#34;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;41&lt;/span&gt;               &lt;span class=&#34;na&#34;&gt;xsi:type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;xs:string&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;42&lt;/span&gt;            555501234
&lt;span class=&#34;ln&#34;&gt;43&lt;/span&gt;          &lt;span class=&#34;nt&#34;&gt;&amp;lt;/saml:attributevalue&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;44&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;/saml:attribute&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;45&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;saml:attribute&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;email&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;46&lt;/span&gt;         &lt;span class=&#34;nt&#34;&gt;&amp;lt;saml:attributevalue&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;47&lt;/span&gt;               &lt;span class=&#34;na&#34;&gt;xmlns:xs=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://www.w3.org/2001/XMLSchema&amp;#34;&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;48&lt;/span&gt;               &lt;span class=&#34;na&#34;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;49&lt;/span&gt;               &lt;span class=&#34;na&#34;&gt;xsi:type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;xs:string&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;50&lt;/span&gt;            someone@example.com
&lt;span class=&#34;ln&#34;&gt;51&lt;/span&gt;         &lt;span class=&#34;nt&#34;&gt;&amp;lt;/saml:attributevalue&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;52&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;/saml:attribute&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;53&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;saml:attribute&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;telephone&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;54&lt;/span&gt;         &lt;span class=&#34;nt&#34;&gt;&amp;lt;saml:attributevalue&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;55&lt;/span&gt;               &lt;span class=&#34;na&#34;&gt;xmlns:xs=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://www.w3.org/2001/XMLSchema&amp;#34;&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;56&lt;/span&gt;               &lt;span class=&#34;na&#34;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;57&lt;/span&gt;               &lt;span class=&#34;na&#34;&gt;xsi:type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;xs:string&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;58&lt;/span&gt;            546848134886
&lt;span class=&#34;ln&#34;&gt;59&lt;/span&gt;         &lt;span class=&#34;nt&#34;&gt;&amp;lt;/saml:attributevalue&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;60&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;/saml:attribute&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;61&lt;/span&gt;   &lt;span class=&#34;nt&#34;&gt;&amp;lt;/saml:attributestatement&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;62&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/saml:assertion&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

        
      </description>
    </item>
    
    <item>
      <title>SAML Web Browser Profile</title>
      <link>https://blog.samlsecurity.com/2012/05/saml-web-profile.html</link>
      <pubDate>Fri, 11 May 2012 00:00:00 +0000</pubDate>
      
      <guid>https://blog.samlsecurity.com/2012/05/saml-web-profile.html</guid>
      <description>
        
          &lt;h2 id=&#34;what-is-it&#34;&gt;What is it?&lt;/h2&gt;
&lt;p&gt;The SAML Web Browser SSO Profile is one of the profiles defined in the SAML specification. As described in &lt;a href=&#34;https://blog.samlsecurity.com/2010/11/short-introduction-to-saml.html&#34;&gt;my introductory post on SAML&lt;/a&gt;, profiles describes how to fulfill a specific use-case using SAML.&lt;/p&gt;
&lt;p&gt;In the realm of user authentication using SAML, the Web Browser Profile is very frequently used.&lt;/p&gt;
&lt;p&gt;The use-case being described in the Web Browser Profile is how to authenticate a user that is using a web browser.&lt;/p&gt;
&lt;h2 id=&#34;how-does-it-work&#34;&gt;How does it work?&lt;/h2&gt;
&lt;p&gt;Below is a description and figure of the flow in the profile. As always when using SAML, things can be done in a number of different ways. In the flow below I describe one common way, using the HTTP-Redirect binding for sending the AuthnRequest and the Artifact binding for sending the SAML Assertion.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;web-browser-flow.jpg&#34; alt=&#34;Request flow of the SAML web browser profile&#34;&gt;&lt;/p&gt;
&lt;p&gt;The authentication process could be said to involve five steps&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;User tries to get access - The process begins with a not authenticated user trying to get access to a protected part of the application (SP). Some form of filter is put in place to catch the user.&lt;/li&gt;
&lt;li&gt;The user is redirected to the Identity Provider(IdP) -When the filter detects a user who is not authenticated, the user is sent to the IdP using HTTP-Redirect.&lt;/li&gt;
&lt;li&gt;The user is authenticated - This step does not involve any interaction with the SP. The IdP has full responsibility for authenticating the user in a secure way.&lt;/li&gt;
&lt;li&gt;Authenticated user is sent back to the SP - When the authentication is successfully completed the user is sent back to the SP together with a SAML Artifact. The artifact is more or less a pointer to the user information at the IdP. The reason for using this method could be that it is considered to insecure to send the assertion via the browser.&lt;/li&gt;
&lt;li&gt;Request user information - When the SP receives the artifact it uses a web service at the IdP to exchange the artifact for a SAML Assertion. This is the actual proof of authentication&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is how the federation with SAML web profile works on a low level. This can be good to know when working with identity federation and especially when debugging.&lt;/p&gt;
&lt;p&gt;Usually when you set up a identity federation this is done with one of the many application available for this purpose, for example. OpenAM, OpenSAML and Oracle Access Manager.&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>SAML metadata</title>
      <link>https://blog.samlsecurity.com/2012/02/saml-metadata.html</link>
      <pubDate>Wed, 22 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>https://blog.samlsecurity.com/2012/02/saml-metadata.html</guid>
      <description>
        
          &lt;p&gt;Metadata is information used in the SAML protocol to expose the configuration of a SAML entity, like a SP or IdP. Metadata define things like what service is available, addresses and certificates. Metadata is defined in XML. A SP uses the Metadata to know how to communicate with the IdP and vise versa.&lt;/p&gt;
&lt;p&gt;Metadata is exchanged beetween the SP and the IDP. There is no protocol how the exchange is done, but there are no secret information in the metadata so the XML can be freely distributed by mail or published in clear text on the Internet.
It is however highly recommended that the metadata is protected from unauthorized modification, this could be a good start on a Man-In-The-Middle attack.
The integrity of the Metadata could be protected using for example digital signatures or by transporting the metadata using some secure channel(USB, VPN etc)

&lt;div class=&#34;book-ad&#34; id=&#34;SAML20Ad&#34;&gt;
&lt;h2 class=&#34;upper_ad_line&#34;&gt;&lt;span&gt;Ad&lt;/span&gt;&lt;/h2&gt;


&lt;a href=&#34;https://shop.samlsecurity.com/b/fGWSH&#34; id=&#34;SAML20Ad-link&#34;&gt;&lt;div class=&#34;book-ad-grid&#34;&gt;

  &lt;div class=&#34;text&#34;&gt; &lt;p&gt;Need a complete understanding of SAML 2.0?&lt;/p&gt;
&lt;p&gt;Have a look on the book &lt;em&gt;SAML 2.0: Designing secure identity federation&lt;/em&gt;!&lt;/p&gt;
&lt;/div&gt;
  
  
  &lt;div class=&#34;cover&#34;&gt;&lt;img alt=&#34;Book cover for SAML 2.0: Designing secure identity federation&#34; src=&#34;https://blog.samlsecurity.com/ads/saml20/saml20_cover_hu21b4ac923320e0693211419acfc85557_238774_400x300_fit_box_2.png&#34; &gt;&lt;/div&gt;
	
&lt;/div&gt;
&lt;/a&gt;
&lt;span class=&#34;lower_ad_line&#34;&gt;&lt;/span&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;A metadata file for a SAML Web Browser SSO Profile IdP could for example contain the following.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Location of its Single Sing On service, Artifact Resolution Service and Single Logout Service.&lt;/li&gt;
&lt;li&gt;An ID identifying the provider.&lt;/li&gt;
&lt;li&gt;Signature of the metadata and public keys for verifying and encrypting further communication.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The file usually include information about if the IdP want the communication signed or encrypted.&lt;/p&gt;
&lt;p&gt;A metadata file for the SP would contain pretty much the same but instead of Artifact Resolution Service have the location of its Assertion Consumer Service.&lt;/p&gt;
&lt;p&gt;Metadata could contain lots of other information. For a full description have a look at the &lt;a href=&#34;http://saml.xml.org/saml-specifications&#34;&gt;SAML specifications&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here is an example of metadata from IdP and SP. Usually these files can be generated by the application handling the SAML comunication.&lt;/p&gt;
&lt;h2 id=&#34;idp&#34;&gt;IdP&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34;?&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;md:EntityDescriptor&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;    &lt;span class=&#34;na&#34;&gt;xmlns:md=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;urn:oasis:names:tc:SAML:2.0:metadata&amp;#34;&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;    &lt;span class=&#34;na&#34;&gt;validUntil=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;2021-05-14T14:40:17Z&amp;#34;&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;    &lt;span class=&#34;na&#34;&gt;cacheDuration=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;PT1621435217S&amp;#34;&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;    &lt;span class=&#34;na&#34;&gt;entityID=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;exampleidp&amp;#34;&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;    &lt;span class=&#34;na&#34;&gt;ID=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;pfx15f5264e-2c11-4717-9e15-b301b1d6bfd9&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;ds:Signature&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns:ds=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://www.w3.org/2000/09/xmldsig#&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;ds:SignedInfo&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;ds:CanonicalizationMethod&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;Algorithm=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://www.w3.org/2001/10/xml-exc-c14n#&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;ds:SignatureMethod&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;Algorithm=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://www.w3.org/2000/09/xmldsig#rsa-sha1&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;ds:Reference&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;URI=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;#pfx15f5264e-2c11-4717-9e15-b301b1d6bfd9&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;ds:Transforms&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;14&lt;/span&gt;          &lt;span class=&#34;nt&#34;&gt;&amp;lt;ds:Transform&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;Algorithm=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://www.w3.org/2000/09/xmldsig#enveloped-signature&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;15&lt;/span&gt;          &lt;span class=&#34;nt&#34;&gt;&amp;lt;ds:Transform&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;Algorithm=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://www.w3.org/2001/10/xml-exc-c14n#&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;16&lt;/span&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/ds:Transforms&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;17&lt;/span&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;ds:DigestMethod&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;Algorithm=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://www.w3.org/2000/09/xmldsig#sha1&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;18&lt;/span&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;ds:DigestValue&amp;gt;&lt;/span&gt;GNLMMU8+ofuHdjn7Lef7drkEnNk=&lt;span class=&#34;nt&#34;&gt;&amp;lt;/ds:DigestValue&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;19&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;/ds:Reference&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;20&lt;/span&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/ds:SignedInfo&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;21&lt;/span&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;ds:SignatureValue&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;22&lt;/span&gt;===============  Meta data signature =============
&lt;span class=&#34;ln&#34;&gt;23&lt;/span&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/ds:SignatureValue&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;24&lt;/span&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;ds:KeyInfo&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;25&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;ds:X509Data&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;26&lt;/span&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;ds:X509Certificate&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;27&lt;/span&gt;===============  Public certificate for meta data signature ============= 
&lt;span class=&#34;ln&#34;&gt;28&lt;/span&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/ds:X509Certificate&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;29&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;/ds:X509Data&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;30&lt;/span&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/ds:KeyInfo&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;31&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;/ds:Signature&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;32&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;md:IDPSSODescriptor&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;33&lt;/span&gt;      &lt;span class=&#34;na&#34;&gt;WantAuthnRequestsSigned=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;false&amp;#34;&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;34&lt;/span&gt;      &lt;span class=&#34;na&#34;&gt;protocolSupportEnumeration=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;urn:oasis:names:tc:SAML:2.0:protocol&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;35&lt;/span&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;md:KeyDescriptor&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;use=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;signing&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;36&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;ds:KeyInfo&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns:ds=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://www.w3.org/2000/09/xmldsig#&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;37&lt;/span&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;ds:X509Data&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;38&lt;/span&gt;          &lt;span class=&#34;nt&#34;&gt;&amp;lt;ds:X509Certificate&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;39&lt;/span&gt;===============  SP public certificate for verifying signatures =============
&lt;span class=&#34;ln&#34;&gt;40&lt;/span&gt;          &lt;span class=&#34;nt&#34;&gt;&amp;lt;/ds:X509Certificate&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;41&lt;/span&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/ds:X509Data&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;42&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;/ds:KeyInfo&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;43&lt;/span&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/md:KeyDescriptor&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;44&lt;/span&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;md:KeyDescriptor&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;use=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;encryption&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;45&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;ds:KeyInfo&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns:ds=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://www.w3.org/2000/09/xmldsig#&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;46&lt;/span&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;ds:X509Data&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;47&lt;/span&gt;          &lt;span class=&#34;nt&#34;&gt;&amp;lt;ds:X509Certificate&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;48&lt;/span&gt;===============  SP public certificate for encrypting =============
&lt;span class=&#34;ln&#34;&gt;49&lt;/span&gt;          &lt;span class=&#34;nt&#34;&gt;&amp;lt;/ds:X509Certificate&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;50&lt;/span&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/ds:X509Data&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;51&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;/ds:KeyInfo&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;52&lt;/span&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/md:KeyDescriptor&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;53&lt;/span&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;md:SingleLogoutService&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;54&lt;/span&gt;        &lt;span class=&#34;na&#34;&gt;Binding=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect&amp;#34;&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;55&lt;/span&gt;        &lt;span class=&#34;na&#34;&gt;Location=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;https://exampleidp.com/idp/singleSignOnService&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;56&lt;/span&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;md:NameIDFormat&amp;gt;&lt;/span&gt;urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified&lt;span class=&#34;nt&#34;&gt;&amp;lt;/md:NameIDFormat&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;57&lt;/span&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;md:SingleSignOnService&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;58&lt;/span&gt;        &lt;span class=&#34;na&#34;&gt;Binding=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect&amp;#34;&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;59&lt;/span&gt;        &lt;span class=&#34;na&#34;&gt;Location=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;https://exampleidp.com/idp/singleSignOnService&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;60&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;/md:IDPSSODescriptor&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;61&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/md:EntityDescriptor&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;sp&#34;&gt;SP&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34;?&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;md:EntityDescriptor&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;    &lt;span class=&#34;na&#34;&gt;xmlns:md=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;urn:oasis:names:tc:SAML:2.0:metadata&amp;#34;&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;    &lt;span class=&#34;na&#34;&gt;validUntil=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;2021-05-14T15:02:56Z&amp;#34;&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;    &lt;span class=&#34;na&#34;&gt;cacheDuration=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;PT604800S&amp;#34;&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;    &lt;span class=&#34;na&#34;&gt;entityID=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;TestSP&amp;#34;&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;    &lt;span class=&#34;na&#34;&gt;ID=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;pfx92d25019-cd26-c6ff-465b-0751318a302b&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;ds:Signature&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns:ds=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://www.w3.org/2000/09/xmldsig#&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;ds:SignedInfo&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;ds:CanonicalizationMethod&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;Algorithm=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://www.w3.org/2001/10/xml-exc-c14n#&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;ds:SignatureMethod&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;Algorithm=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://www.w3.org/2000/09/xmldsig#rsa-sha1&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;ds:Reference&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;URI=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;#pfx92d25019-cd26-c6ff-465b-0751318a302b&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;ds:Transforms&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;14&lt;/span&gt;          &lt;span class=&#34;nt&#34;&gt;&amp;lt;ds:Transform&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;Algorithm=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://www.w3.org/2000/09/xmldsig#enveloped-signature&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;15&lt;/span&gt;          &lt;span class=&#34;nt&#34;&gt;&amp;lt;ds:Transform&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;Algorithm=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://www.w3.org/2001/10/xml-exc-c14n#&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;16&lt;/span&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/ds:Transforms&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;17&lt;/span&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;ds:DigestMethod&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;Algorithm=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://www.w3.org/2000/09/xmldsig#sha1&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;18&lt;/span&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;ds:DigestValue&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;19&lt;/span&gt;=============== Meta data signature digest =============        
&lt;span class=&#34;ln&#34;&gt;20&lt;/span&gt;       &lt;span class=&#34;nt&#34;&gt;&amp;lt;/ds:DigestValue&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;21&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;/ds:Reference&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;22&lt;/span&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/ds:SignedInfo&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;23&lt;/span&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;ds:SignatureValue&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;24&lt;/span&gt;=============== Meta data signature =============
&lt;span class=&#34;ln&#34;&gt;25&lt;/span&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/ds:SignatureValue&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;26&lt;/span&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;ds:KeyInfo&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;27&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;ds:X509Data&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;28&lt;/span&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;ds:X509Certificate&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;29&lt;/span&gt;=============== Public certificate for meta data signature ============= 
&lt;span class=&#34;ln&#34;&gt;30&lt;/span&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/ds:X509Certificate&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;31&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;/ds:X509Data&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;32&lt;/span&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/ds:KeyInfo&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;33&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;/ds:Signature&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;34&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;md:SPSSODescriptor&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;35&lt;/span&gt;      &lt;span class=&#34;na&#34;&gt;AuthnRequestsSigned=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;36&lt;/span&gt;      &lt;span class=&#34;na&#34;&gt;WantAssertionsSigned=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;37&lt;/span&gt;      &lt;span class=&#34;na&#34;&gt;protocolSupportEnumeration=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;urn:oasis:names:tc:SAML:2.0:protocol&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;38&lt;/span&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;md:KeyDescriptor&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;use=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;signing&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;39&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;ds:KeyInfo&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns:ds=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://www.w3.org/2000/09/xmldsig#&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;40&lt;/span&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;ds:X509Data&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;41&lt;/span&gt;          &lt;span class=&#34;nt&#34;&gt;&amp;lt;ds:X509Certificate&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;42&lt;/span&gt;===============  IdP public certificate for verifying signatures =============
&lt;span class=&#34;ln&#34;&gt;43&lt;/span&gt;          &lt;span class=&#34;nt&#34;&gt;&amp;lt;/ds:X509Certificate&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;44&lt;/span&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/ds:X509Data&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;45&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;/ds:KeyInfo&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;46&lt;/span&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/md:KeyDescriptor&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;47&lt;/span&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;md:KeyDescriptor&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;use=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;encryption&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;48&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;ds:KeyInfo&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns:ds=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://www.w3.org/2000/09/xmldsig#&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;49&lt;/span&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;ds:X509Data&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;50&lt;/span&gt;          &lt;span class=&#34;nt&#34;&gt;&amp;lt;ds:X509Certificate&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;51&lt;/span&gt;===============  IdP public certificate for encrypting =============
&lt;span class=&#34;ln&#34;&gt;52&lt;/span&gt;          &lt;span class=&#34;nt&#34;&gt;&amp;lt;/ds:X509Certificate&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;53&lt;/span&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/ds:X509Data&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;54&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;/ds:KeyInfo&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;55&lt;/span&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/md:KeyDescriptor&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;56&lt;/span&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;md:SingleLogoutService&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;57&lt;/span&gt;        &lt;span class=&#34;na&#34;&gt;Binding=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect&amp;#34;&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;58&lt;/span&gt;        &lt;span class=&#34;na&#34;&gt;Location=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;https://examplesp.com/sp/artifactConsumer&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;59&lt;/span&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;md:NameIDFormat&amp;gt;&lt;/span&gt;urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified&lt;span class=&#34;nt&#34;&gt;&amp;lt;/md:NameIDFormat&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;60&lt;/span&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;md:AssertionConsumerService&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;61&lt;/span&gt;        &lt;span class=&#34;na&#34;&gt;Binding=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST&amp;#34;&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;62&lt;/span&gt;        &lt;span class=&#34;na&#34;&gt;Location=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;https://examplesp.com/sp/artifactConsumer&amp;#34;&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;63&lt;/span&gt;        &lt;span class=&#34;na&#34;&gt;index=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;64&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;/md:SPSSODescriptor&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;65&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/md:EntityDescriptor&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

        
      </description>
    </item>
    
    <item>
      <title>SAML explained</title>
      <link>https://blog.samlsecurity.com/2010/11/short-introduction-to-saml.html</link>
      <pubDate>Mon, 22 Nov 2010 00:00:00 +0000</pubDate>
      
      <guid>https://blog.samlsecurity.com/2010/11/short-introduction-to-saml.html</guid>
      <description>
        
          &lt;p&gt;The past few weeks I’ve been trying to understand how the SAML protocol works. I’m planing to write a couple of posts about SAML in the future so first, here is a short introduction in SAML.&lt;/p&gt;
&lt;p&gt;SAML is “an XML framework for exchanging authentication and authorization information.”&lt;/p&gt;
&lt;p&gt;So basically its a big XML schema.&lt;/p&gt;
&lt;p&gt;SAML is built up of four main specifications.
Assertions, protocols, bindings and profiles.&lt;/p&gt;
&lt;h2 id=&#34;assertions-the-information&#34;&gt;Assertions, the information&lt;/h2&gt;
&lt;p&gt;This is the actual information being sent, such as credentials, profile information and authorization decisions.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;saml:Assertion&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns:saml=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;urn:oasis:names:tc:SAML:2.0:assertion&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;ID=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;560f83e350ff2cabfa02345ee59153ba&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;IssueInstant=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;2010-11-22T14:30:30.728Z&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;Version=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;2.0&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;saml:Issuer&amp;gt;&lt;/span&gt;me&lt;span class=&#34;nt&#34;&gt;&amp;lt;/saml:Issuer&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;saml:Subject&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;saml:NameID&amp;gt;&lt;/span&gt;harold_dt&lt;span class=&#34;nt&#34;&gt;&amp;lt;/saml:NameID&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;/saml:Subject&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;saml:AuthnStatement&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;AuthnInstant=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;2010-11-04T14:04:30Z&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;SessionIndex=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;s22428b07e56ce0dbd3f72237ce29c585541db5d01&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;saml:AuthnContext&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;saml:AuthnContextClassRef&amp;gt;&lt;/span&gt;urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;/saml:AuthnContextClassRef&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/saml:AuthnContext&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;/saml:AuthnStatement&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/saml:Assertion&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;saml:Issuer&amp;gt;&lt;/code&gt; The entity sending the assertion.
&lt;code&gt;&amp;lt;saml:Subject&amp;gt;&lt;/code&gt; The identity the assertion is about
&lt;code&gt;&amp;lt;saml:NameID&amp;gt;&lt;/code&gt; The identities unique identifier
&lt;code&gt;&amp;lt;saml:AuthnStatement&amp;gt;&lt;/code&gt; Authentication information, here only authentication method, PasswordProtectedTransport. Aka login was don with username and password.&lt;/p&gt;

&lt;div class=&#34;book-ad&#34; id=&#34;SAML20Ad&#34;&gt;
&lt;h2 class=&#34;upper_ad_line&#34;&gt;&lt;span&gt;Ad&lt;/span&gt;&lt;/h2&gt;


&lt;a href=&#34;https://shop.samlsecurity.com/b/fGWSH&#34; id=&#34;SAML20Ad-link&#34;&gt;&lt;div class=&#34;book-ad-grid&#34;&gt;

  &lt;div class=&#34;text&#34;&gt; &lt;p&gt;Need a complete understanding of SAML 2.0?&lt;/p&gt;
&lt;p&gt;Have a look on the book &lt;em&gt;SAML 2.0: Designing secure identity federation&lt;/em&gt;!&lt;/p&gt;
&lt;/div&gt;
  
  
  &lt;div class=&#34;cover&#34;&gt;&lt;img alt=&#34;Book cover for SAML 2.0: Designing secure identity federation&#34; src=&#34;https://blog.samlsecurity.com/ads/saml20/saml20_cover_hu21b4ac923320e0693211419acfc85557_238774_400x300_fit_box_2.png&#34; &gt;&lt;/div&gt;
	
&lt;/div&gt;
&lt;/a&gt;
&lt;span class=&#34;lower_ad_line&#34;&gt;&lt;/span&gt;
&lt;/div&gt;
&lt;h2 id=&#34;protocol-processing&#34;&gt;Protocol, processing&lt;/h2&gt;
&lt;p&gt;Is a packaging of the assertions that defines how the assertion should be creates and processed&lt;/p&gt;
&lt;h2 id=&#34;binding-the-transport&#34;&gt;Binding, the transport&lt;/h2&gt;
&lt;p&gt;Defines how the messages are transported in a standard communication protocol for example SOAP, ie wrapping an assertion in a SOAP envelope.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;soap-env:Envelope&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns:soap-env=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://schemas.xmlsoap.org/soap/envelope/&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;soap-env:Body&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;    &lt;span class=&#34;c&#34;&gt;&amp;lt;!-- Assertion --&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;/soap-env:Body&amp;gt;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/soap-env:Envelope&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;profiles-putting-it-together&#34;&gt;Profiles, putting it together&lt;/h2&gt;
&lt;p&gt;The profiles define describes on a higher level how the different parts should be used to solve a task. For example the Web browser profile describes how authentications is done from a web browser.&lt;/p&gt;
&lt;p&gt;For detailed information on the SAML protocol have a look at the &lt;a href=&#34;http://saml.xml.org/wiki/saml-introduction&#34;&gt;different documents from OASIS here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The management and technical overviews are good next steps&lt;br&gt;
&lt;a href=&#34;http://www.oasis-open.org/committees/download.php/13525/sstc-saml-exec-overview-2.0-cd-01-2col.pdf&#34;&gt;Management Overview&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;http://www.oasis-open.org/committees/download.php/27819/sstc-saml-tech-overview-2.0-cd-02.pdf&#34;&gt;Technical Overview&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To really dig in deep have a look at the &lt;a href=&#34;http://saml.xml.org/saml-specifications&#34;&gt;raw SAML specs here&lt;/a&gt;&lt;/p&gt;

        
      </description>
    </item>
    
  </channel>
</rss>
